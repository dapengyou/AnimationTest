apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.test.animationtest"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //签名
    signingConfigs {
        release {
            storeFile file("animation_test.jks")
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
        }
        debug {
            storeFile file("animation_test.jks")
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            minifyEnabled false         //不启用Proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false        //不启用Proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //引入butterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

}

task copyTask {
    doLast {
        def fileName = "app-release.apk"
//        拷贝文件的始发地
        def sourceFile = "./build/outputs/apk/release/" + fileName

        def time = new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())

//        指定文件拷贝的目的地
        def destationFile = new File(project.getProjectDir().path)
        println destationFile.toString()

        def appName = "${time}_release.apk"
        try {
//            判断文件是否存在
            if (!destationFile.exists()) {
                destationFile.createNewFile()
            }
            //拷贝
            copy {
                from sourceFile
                into destationFile

                rename {
                    appName
                }
            }

        } catch (Exception e) {
            e.printStackTrace()
        }

    }
}
